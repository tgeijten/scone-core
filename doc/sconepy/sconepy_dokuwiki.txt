====== SconePy API Reference ======

==== Functions === 
  * **evaluate_par_file**(...) method of builtins.PyCapsule instance ''[[#-evaluate_par_file|evaluate_par_file]](arg0: str) -> None'' 
  * **is_array_dtype_float32**(...) method of builtins.PyCapsule instance ''[[#-is_array_dtype_float32|is_array_dtype_float32]]() -> bool'' 
  * **is_array_dtype_float64**(...) method of builtins.PyCapsule instance ''[[#-is_array_dtype_float64|is_array_dtype_float64]]() -> bool'' 
  * **is_supported**(...) method of builtins.PyCapsule instance ''[[#-is_supported|is_supported]](arg0: str) -> bool'' 
  * **load_model**(...) method of builtins.PyCapsule instance ''[[#-load_model|load_model]](arg0: str) -> scone::[[#Model|Model]]'' 
  * **replace_string_tags**(...) method of builtins.PyCapsule instance ''[[#-replace_string_tags|replace_string_tags]](arg0: str) -> str'' 
  * **scone_dir**(...) method of builtins.PyCapsule instance ''[[#-scone_dir|scone_dir]]() -> str'' 
  * **scone_results_dir**(...) method of builtins.PyCapsule instance ''[[#-scone_results_dir|scone_results_dir]]() -> str'' 
  * **set_array_dtype_float32**(...) method of builtins.PyCapsule instance ''[[#-set_array_dtype_float32|set_array_dtype_float32]]() -> None'' 
  * **set_array_dtype_float64**(...) method of builtins.PyCapsule instance ''[[#-set_array_dtype_float64|set_array_dtype_float64]]() -> None'' 
  * **set_log_level**(...) method of builtins.PyCapsule instance ''[[#-set_log_level|set_log_level]](arg0: int) -> None'' 
  * **version**(...) method of builtins.PyCapsule instance ''[[#-version|version]]() -> str'' |


==== Classes =====
=== Actuator ====

  * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **add_input**(...) ''[[#Actuator-add_input|add_input]](self: sconepy.[[#Actuator|Actuator]], arg0: float) -> float'' 
  * **clear_input**(...) ''[[#Actuator-clear_input|clear_input]](self: sconepy.[[#Actuator|Actuator]]) -> None'' 
  * **input**(...) ''[[#Actuator-input|input]](self: sconepy.[[#Actuator|Actuator]]) -> float'' 
  * **max_input**(...) ''[[#Actuator-max_input|max_input]](self: sconepy.[[#Actuator|Actuator]]) -> float'' 
  * **min_input**(...) ''[[#Actuator-min_input|min_input]](self: sconepy.[[#Actuator|Actuator]]) -> float'' 
  * **name**(...) ''[[#Actuator-name|name]](self: sconepy.[[#Actuator|Actuator]]) -> str'' 

=== Body ====

    * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **add_external_force**(...) ''[[#Body-add_external_force|add_external_force]](self: sconepy.[[#Body|Body]], arg0: sconepy.[[#Vec3|Vec3]]) -> None'' 
  * **add_external_moment**(...) ''[[#Body-add_external_moment|add_external_moment]](self: sconepy.[[#Body|Body]], arg0: sconepy.[[#Vec3|Vec3]]) -> None'' 
  * **ang_acc**(...) ''[[#Body-ang_acc|ang_acc]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **ang_vel**(...) ''[[#Body-ang_vel|ang_vel]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **clear_external_force_moment**(...) ''[[#Body-clear_external_force_moment|clear_external_force_moment]](self: sconepy.[[#Body|Body]]) -> None'' 
  * **com_acc**(...) ''[[#Body-com_acc|com_acc]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **com_pos**(...) ''[[#Body-com_pos|com_pos]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **com_vel**(...) ''[[#Body-com_vel|com_vel]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **contact_force**(...) ''[[#Body-contact_force|contact_force]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **contact_moment**(...) ''[[#Body-contact_moment|contact_moment]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **contact_point**(...) ''[[#Body-contact_point|contact_point]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **external_force**(...) ''[[#Body-external_force|external_force]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **external_force_at**(...) ''[[#Body-external_force_at|external_force_at]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **external_moment**(...) ''[[#Body-external_moment|external_moment]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **inertia_diag**(...) ''[[#Body-inertia_diag|inertia_diag]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **mass**(...) ''[[#Body-mass|mass]](self: sconepy.[[#Body|Body]]) -> float'' 
  * **name**(...) ''[[#Body-name|name]](self: sconepy.[[#Body|Body]]) -> str'' 
  * **orientation**(...) ''[[#Body-orientation|orientation]](self: sconepy.[[#Body|Body]]) -> sconepy.[[#Quat|Quat]]'' 
  * **set_ang_vel**(...) ''[[#Body-set_ang_vel|set_ang_vel]](self: sconepy.[[#Body|Body]], arg0: sconepy.[[#Vec3|Vec3]]) -> None'' 
  * **set_external_force**(...) ''[[#Body-set_external_force|set_external_force]](self: sconepy.[[#Body|Body]], arg0: sconepy.[[#Vec3|Vec3]]) -> None'' 
  * **set_external_force_at**(...) ''[[#Body-set_external_force_at|set_external_force_at]](self: sconepy.[[#Body|Body]], arg0: sconepy.[[#Vec3|Vec3]], arg1: sconepy.[[#Vec3|Vec3]]) -> None'' 
  * **set_external_moment**(...) ''[[#Body-set_external_moment|set_external_moment]](self: sconepy.[[#Body|Body]], arg0: sconepy.[[#Vec3|Vec3]]) -> None'' 
  * **set_lin_vel**(...) ''[[#Body-set_lin_vel|set_lin_vel]](self: sconepy.[[#Body|Body]], arg0: sconepy.[[#Vec3|Vec3]]) -> None'' 
  * **set_orientation**(...) ''[[#Body-set_orientation|set_orientation]](self: sconepy.[[#Body|Body]], arg0: sconepy.[[#Quat|Quat]]) -> None'' 
  * **set_pos**(...) ''[[#Body-set_pos|set_pos]](self: sconepy.[[#Body|Body]], arg0: sconepy.[[#Vec3|Vec3]]) -> None'' 

=== Dof ====

    * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **is_actuated**(...) ''[[#Dof-is_actuated|is_actuated]](self: sconepy.[[#Dof|Dof]]) -> bool'' 
  * **is_rotational**(...) ''[[#Dof-is_rotational|is_rotational]](self: sconepy.[[#Dof|Dof]]) -> bool'' 
  * **name**(...) ''[[#Dof-name|name]](self: sconepy.[[#Dof|Dof]]) -> str'' 
  * **pos**(...) ''[[#Dof-pos|pos]](self: sconepy.[[#Dof|Dof]]) -> float'' 
  * **rotation_axis**(...) ''[[#Dof-rotation_axis|rotation_axis]](self: sconepy.[[#Dof|Dof]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **set_pos**(...) ''[[#Dof-set_pos|set_pos]](self: sconepy.[[#Dof|Dof]], arg0: float) -> None'' 
  * **set_vel**(...) ''[[#Dof-set_vel|set_vel]](self: sconepy.[[#Dof|Dof]], arg0: float) -> None'' 
  * **vel**(...) ''[[#Dof-vel|vel]](self: sconepy.[[#Dof|Dof]]) -> float'' 

=== Joint ====

    * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **add_motor_torque**(...) ''[[#Joint-add_motor_torque|add_motor_torque]](self: sconepy.[[#Joint|Joint]], arg0: sconepy.[[#Vec3|Vec3]]) -> None'' 
  * **body**(...) ''[[#Joint-body|body]](self: sconepy.[[#Joint|Joint]]) -> sconepy.[[#Body|Body]]'' 
  * **has_motor**(...) ''[[#Joint-has_motor|has_motor]](self: sconepy.[[#Joint|Joint]]) -> bool'' 
  * **limit_power**(...) ''[[#Joint-limit_power|limit_power]](self: sconepy.[[#Joint|Joint]]) -> float'' 
  * **limit_torque**(...) ''[[#Joint-limit_torque|limit_torque]](self: sconepy.[[#Joint|Joint]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **load**(...) ''[[#Joint-load|load]](self: sconepy.[[#Joint|Joint]]) -> float'' 
  * **motor_max_torque**(...) ''[[#Joint-motor_max_torque|motor_max_torque]](self: sconepy.[[#Joint|Joint]]) -> float'' 
  * **name**(...) ''[[#Joint-name|name]](self: sconepy.[[#Joint|Joint]]) -> str'' 
  * **parent_body**(...) ''[[#Joint-parent_body|parent_body]](self: sconepy.[[#Joint|Joint]]) -> sconepy.[[#Body|Body]]'' 
  * **reaction_force**(...) ''[[#Joint-reaction_force|reaction_force]](self: sconepy.[[#Joint|Joint]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **set_motor_damping**(...) ''[[#Joint-set_motor_damping|set_motor_damping]](self: sconepy.[[#Joint|Joint]], arg0: float) -> None'' 
  * **set_motor_stiffness**(...) ''[[#Joint-set_motor_stiffness|set_motor_stiffness]](self: sconepy.[[#Joint|Joint]], arg0: float) -> None'' 
  * **set_motor_target_orientation**(...) ''[[#Joint-set_motor_target_orientation|set_motor_target_orientation]](self: sconepy.[[#Joint|Joint]], arg0: sconepy.[[#Quat|Quat]]) -> None'' 
  * **set_motor_target_velocity**(...) ''[[#Joint-set_motor_target_velocity|set_motor_target_velocity]](self: sconepy.[[#Joint|Joint]], arg0: sconepy.[[#Vec3|Vec3]]) -> None'' 

=== Leg ====

    * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **base_body**(...) ''[[#Leg-base_body|base_body]](self: sconepy.[[#Leg|Leg]]) -> sconepy.[[#Body|Body]]'' 
  * **contact_force**(...) ''[[#Leg-contact_force|contact_force]](self: sconepy.[[#Leg|Leg]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **contact_load**(...) ''[[#Leg-contact_load|contact_load]](self: sconepy.[[#Leg|Leg]]) -> float'' 
  * **contact_moment**(...) ''[[#Leg-contact_moment|contact_moment]](self: sconepy.[[#Leg|Leg]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **contact_pos**(...) ''[[#Leg-contact_pos|contact_pos]](self: sconepy.[[#Leg|Leg]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **foot_body**(...) ''[[#Leg-foot_body|foot_body]](self: sconepy.[[#Leg|Leg]]) -> sconepy.[[#Body|Body]]'' 
  * **length**(...) ''[[#Leg-length|length]](self: sconepy.[[#Leg|Leg]]) -> float'' 
  * **name**(...) ''[[#Leg-name|name]](self: sconepy.[[#Leg|Leg]]) -> str'' 
  * **relative_foot_position**(...) ''[[#Leg-relative_foot_position|relative_foot_position]](self: sconepy.[[#Leg|Leg]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **upper_body**(...) ''[[#Leg-upper_body|upper_body]](self: sconepy.[[#Leg|Leg]]) -> sconepy.[[#Body|Body]]'' 

=== Measure ====

    * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **current_result**(...) ''[[#Measure-current_result|current_result]](self: sconepy.[[#Measure|Measure]], arg0: scone::[[#Model|Model]]) -> float'' 
  * **current_weighted_result**(...) ''[[#Measure-current_weighted_result|current_weighted_result]](self: sconepy.[[#Measure|Measure]], arg0: scone::[[#Model|Model]]) -> float'' 
  * **final_result**(...) ''[[#Measure-final_result|final_result]](self: sconepy.[[#Measure|Measure]], arg0: scone::[[#Model|Model]]) -> float'' 
  * **final_weighted_result**(...) ''[[#Measure-final_weighted_result|final_weighted_result]](self: sconepy.[[#Measure|Measure]], arg0: scone::[[#Model|Model]]) -> float'' 
  * **name**(...) ''[[#Measure-name|name]](self: sconepy.[[#Measure|Measure]]) -> str'' 

=== Model ====

    * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **actuator_input_array**(...) ''[[#Model-actuator_input_array|actuator_input_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **actuators**(...) ''[[#Model-actuators|actuators]](self: sconepy.[[#Model|Model]]) -> List[sconepy.[[#Actuator|Actuator]]]'' 
  * **adjust_state_for_load**(...) ''[[#Model-adjust_state_for_load|adjust_state_for_load]](self: sconepy.[[#Model|Model]], arg0: float) -> None'' 
  * **advance_simulation_to**(...) ''[[#Model-advance_simulation_to|advance_simulation_to]](self: sconepy.[[#Model|Model]], arg0: float) -> None'' 
  * **bodies**(...) ''[[#Model-bodies|bodies]](self: sconepy.[[#Model|Model]]) -> List[sconepy.[[#Body|Body]]]'' 
  * **com_pos**(...) ''[[#Model-com_pos|com_pos]](self: sconepy.[[#Model|Model]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **com_vel**(...) ''[[#Model-com_vel|com_vel]](self: sconepy.[[#Model|Model]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **contact_force**(...) ''[[#Model-contact_force|contact_force]](self: sconepy.[[#Model|Model]]) -> float'' 
  * **contact_load**(...) ''[[#Model-contact_load|contact_load]](self: sconepy.[[#Model|Model]]) -> float'' 
  * **contact_power**(...) ''[[#Model-contact_power|contact_power]](self: sconepy.[[#Model|Model]]) -> float'' 
  * **control_step_size**(...) ''[[#Model-control_step_size|control_step_size]](self: sconepy.[[#Model|Model]]) -> float'' 
  * **current_measure**(...) ''[[#Model-current_measure|current_measure]](self: sconepy.[[#Model|Model]]) -> float'' 
  * **delayed_dof_position_array**(...) ''[[#Model-delayed_dof_position_array|delayed_dof_position_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **delayed_dof_velocity_array**(...) ''[[#Model-delayed_dof_velocity_array|delayed_dof_velocity_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **delayed_muscle_fiber_length_array**(...) ''[[#Model-delayed_muscle_fiber_length_array|delayed_muscle_fiber_length_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **delayed_muscle_fiber_velocity_array**(...) ''[[#Model-delayed_muscle_fiber_velocity_array|delayed_muscle_fiber_velocity_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **delayed_muscle_force_array**(...) ''[[#Model-delayed_muscle_force_array|delayed_muscle_force_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **delayed_vestibular_array**(...) ''[[#Model-delayed_vestibular_array|delayed_vestibular_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **dof_position_array**(...) ''[[#Model-dof_position_array|dof_position_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **dof_velocity_array**(...) ''[[#Model-dof_velocity_array|dof_velocity_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **dofs**(...) ''[[#Model-dofs|dofs]](self: sconepy.[[#Model|Model]]) -> List[sconepy.[[#Dof|Dof]]]'' 
  * **final_measure**(...) ''[[#Model-final_measure|final_measure]](self: sconepy.[[#Model|Model]]) -> float'' 
  * **gravity**(...) ''[[#Model-gravity|gravity]](self: sconepy.[[#Model|Model]]) -> sconepy.[[#Vec3|Vec3]]'' 
  * **has_simulation_ended**(...) ''[[#Model-has_simulation_ended|has_simulation_ended]](self: sconepy.[[#Model|Model]]) -> bool'' 
  * **init_muscle_activations**(...) ''[[#Model-init_muscle_activations|init_muscle_activations]](self: sconepy.[[#Model|Model]], arg0: numpy.ndarray[numpy.float64]) -> None'' 
  * **init_state_from_dofs**(...) ''[[#Model-init_state_from_dofs|init_state_from_dofs]](self: sconepy.[[#Model|Model]]) -> None'' 
  * **integration_step**(...) ''[[#Model-integration_step|integration_step]](self: sconepy.[[#Model|Model]]) -> int'' 
  * **joints**(...) ''[[#Model-joints|joints]](self: sconepy.[[#Model|Model]]) -> List[sconepy.[[#Joint|Joint]]]'' 
  * **legs**(...) ''[[#Model-legs|legs]](self: sconepy.[[#Model|Model]]) -> List[sconepy.[[#Leg|Leg]]]'' 
  * **log_measure_report**(...) ''[[#Model-log_measure_report|log_measure_report]](self: sconepy.[[#Model|Model]]) -> None'' 
  * **mass**(...) ''[[#Model-mass|mass]](self: sconepy.[[#Model|Model]]) -> float'' 
  * **measure**(...) ''[[#Model-measure|measure]](self: sconepy.[[#Model|Model]]) -> sconepy.[[#Measure|Measure]]'' 
  * **muscle_activation_array**(...) ''[[#Model-muscle_activation_array|muscle_activation_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **muscle_excitation_array**(...) ''[[#Model-muscle_excitation_array|muscle_excitation_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **muscle_fiber_length_array**(...) ''[[#Model-muscle_fiber_length_array|muscle_fiber_length_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **muscle_fiber_velocity_array**(...) ''[[#Model-muscle_fiber_velocity_array|muscle_fiber_velocity_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **muscle_force_array**(...) ''[[#Model-muscle_force_array|muscle_force_array]](self: sconepy.[[#Model|Model]]) -> numpy.ndarray'' 
  * **muscles**(...) ''[[#Model-muscles|muscles]](self: sconepy.[[#Model|Model]]) -> List[sconepy.[[#Muscle|Muscle]]]'' 
  * **name**(...) ''[[#Model-name|name]](self: sconepy.[[#Model|Model]]) -> str'' 
  * **reset**(...) ''[[#Model-reset|reset]](self: sconepy.[[#Model|Model]]) -> None'' 
  * **set_actuator_inputs**(...) ''[[#Model-set_actuator_inputs|set_actuator_inputs]](self: sconepy.[[#Model|Model]], arg0: numpy.ndarray[numpy.float64]) -> None'' 
  * **set_delayed_actuator_inputs**(...) ''[[#Model-set_delayed_actuator_inputs|set_delayed_actuator_inputs]](self: sconepy.[[#Model|Model]], arg0: numpy.ndarray[numpy.float64]) -> None'' 
  * **set_dof_positions**(...) ''[[#Model-set_dof_positions|set_dof_positions]](self: sconepy.[[#Model|Model]], arg0: numpy.ndarray[numpy.float64]) -> None'' 
  * **set_dof_velocities**(...) ''[[#Model-set_dof_velocities|set_dof_velocities]](self: sconepy.[[#Model|Model]], arg0: numpy.ndarray[numpy.float64]) -> None'' 
  * **set_simulation_end_time**(...) ''[[#Model-set_simulation_end_time|set_simulation_end_time]](self: sconepy.[[#Model|Model]], arg0: float) -> None'' 
  * **set_state**(...) ''[[#Model-set_state|set_state]](self: sconepy.[[#Model|Model]], arg0: Dict[str, float]) -> None'' 
  * **set_store_data**(...) ''[[#Model-set_store_data|set_store_data]](self: sconepy.[[#Model|Model]], arg0: bool) -> None'' 
  * **state**(...) ''[[#Model-state|state]](self: sconepy.[[#Model|Model]]) -> Dict[str, float]'' 
  * **time**(...) ''[[#Model-time|time]](self: sconepy.[[#Model|Model]]) -> float'' 
  * **write_results**(...) ''[[#Model-write_results|write_results]](self: sconepy.[[#Model|Model]], arg0: str, arg1: str) -> None'' 

=== Muscle ====

    * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **activation**(...) ''[[#Muscle-activation|activation]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **excitation**(...) ''[[#Muscle-excitation|excitation]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **fiber_length**(...) ''[[#Muscle-fiber_length|fiber_length]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **fiber_length_norm**(...) ''[[#Muscle-fiber_length_norm|fiber_length_norm]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **fiber_velocity**(...) ''[[#Muscle-fiber_velocity|fiber_velocity]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **fiber_velocity_norm**(...) ''[[#Muscle-fiber_velocity_norm|fiber_velocity_norm]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **force**(...) ''[[#Muscle-force|force]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **force_norm**(...) ''[[#Muscle-force_norm|force_norm]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **init_activation**(...) ''[[#Muscle-init_activation|init_activation]](self: sconepy.[[#Muscle|Muscle]], arg0: float) -> None'' 
  * **insertion_body**(...) ''[[#Muscle-insertion_body|insertion_body]](self: sconepy.[[#Muscle|Muscle]]) -> sconepy.[[#Body|Body]]'' 
  * **max_isometric_force**(...) ''[[#Muscle-max_isometric_force|max_isometric_force]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **name**(...) ''[[#Muscle-name|name]](self: sconepy.[[#Muscle|Muscle]]) -> str'' 
  * **optimal_fiber_length**(...) ''[[#Muscle-optimal_fiber_length|optimal_fiber_length]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **origin_body**(...) ''[[#Muscle-origin_body|origin_body]](self: sconepy.[[#Muscle|Muscle]]) -> sconepy.[[#Body|Body]]'' 
  * **pennation_angle_at_optimal**(...) ''[[#Muscle-pennation_angle_at_optimal|pennation_angle_at_optimal]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 
  * **tendon_slack_length**(...) ''[[#Muscle-tendon_slack_length|tendon_slack_length]](self: sconepy.[[#Muscle|Muscle]]) -> float'' 

=== Quat ====

    * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **array**(...) ''[[#Quat-array|array]](self: sconepy.[[#Quat|Quat]]) -> numpy.ndarray'' 
  * **to_euler_xyz**(...) ''[[#Quat-to_euler_xyz|to_euler_xyz]](self: sconepy.[[#Quat|Quat]]) -> xo::vec3_<xo::angle_<1,double> >'' 
  * **to_euler_xzy**(...) ''[[#Quat-to_euler_xzy|to_euler_xzy]](self: sconepy.[[#Quat|Quat]]) -> xo::vec3_<xo::angle_<1,double> >'' 
  * **to_euler_yxz**(...) ''[[#Quat-to_euler_yxz|to_euler_yxz]](self: sconepy.[[#Quat|Quat]]) -> xo::vec3_<xo::angle_<1,double> >'' 
  * **to_euler_yzx**(...) ''[[#Quat-to_euler_yzx|to_euler_yzx]](self: sconepy.[[#Quat|Quat]]) -> xo::vec3_<xo::angle_<1,double> >'' 
  * **to_euler_zxy**(...) ''[[#Quat-to_euler_zxy|to_euler_zxy]](self: sconepy.[[#Quat|Quat]]) -> xo::vec3_<xo::angle_<1,double> >'' 
  * **to_euler_zyx**(...) ''[[#Quat-to_euler_zyx|to_euler_zyx]](self: sconepy.[[#Quat|Quat]]) -> xo::vec3_<xo::angle_<1,double> >'' 
  * **to_rotation_vector**(...) ''[[#Quat-to_rotation_vector|to_rotation_vector]](self: sconepy.[[#Quat|Quat]]) -> sconepy.[[#Vec3|Vec3]]''

Data descriptors defined here:
**w** **x** **y** **z** 

=== Vec3 ====

  * **__init__**(self, /, *args, %%**%%kwargs) ''Initialize self.  See help(type(self)) for accurate signature.'' 
  * **__repr__**(...) ''[[#Vec3-__repr__|__repr__]](self: sconepy.[[#Vec3|Vec3]]) -> str'' 
  * **__str__**(...) ''[[#Vec3-__str__|__str__]](self: sconepy.[[#Vec3|Vec3]]) -> str'' 
  * **array**(...) ''[[#Vec3-array|array]](self: sconepy.[[#Vec3|Vec3]]) -> numpy.ndarray''

Data descriptors defined here:
**x** **y** **z** 
