Help on module sconepy:

NAME
    sconepy

CLASSES
    pybind11_builtins.pybind11_object(builtins.object)
        Actuator
        Body
        Dof
        Joint
        Leg
        Measure
        Model
        Muscle
        Optimizer
        Quat
        Scenario
        Vec3
    
    class Actuator(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Actuator
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  add_input(...)
     |      add_input(self: sconepy.Actuator, arg0: float) -> float
     |  
     |  clear_input(...)
     |      clear_input(self: sconepy.Actuator) -> None
     |  
     |  input(...)
     |      input(self: sconepy.Actuator) -> float
     |  
     |  max_input(...)
     |      max_input(self: sconepy.Actuator) -> float
     |  
     |  min_input(...)
     |      min_input(self: sconepy.Actuator) -> float
     |  
     |  name(...)
     |      name(self: sconepy.Actuator) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Body(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Body
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  add_external_force(...)
     |      add_external_force(self: sconepy.Body, arg0: sconepy.Vec3) -> None
     |  
     |  add_external_moment(...)
     |      add_external_moment(self: sconepy.Body, arg0: sconepy.Vec3) -> None
     |  
     |  ang_acc(...)
     |      ang_acc(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  ang_vel(...)
     |      ang_vel(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  clear_external_force_moment(...)
     |      clear_external_force_moment(self: sconepy.Body) -> None
     |  
     |  com_acc(...)
     |      com_acc(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  com_pos(...)
     |      com_pos(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  com_vel(...)
     |      com_vel(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  contact_force(...)
     |      contact_force(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  contact_moment(...)
     |      contact_moment(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  contact_point(...)
     |      contact_point(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  external_force(...)
     |      external_force(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  external_force_at(...)
     |      external_force_at(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  external_moment(...)
     |      external_moment(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  inertia_diag(...)
     |      inertia_diag(self: sconepy.Body) -> sconepy.Vec3
     |  
     |  mass(...)
     |      mass(self: sconepy.Body) -> float
     |  
     |  name(...)
     |      name(self: sconepy.Body) -> str
     |  
     |  orientation(...)
     |      orientation(self: sconepy.Body) -> sconepy.Quat
     |  
     |  point_acc(...)
     |      point_acc(self: sconepy.Body, arg0: sconepy.Vec3) -> sconepy.Vec3
     |  
     |  point_pos(...)
     |      point_pos(self: sconepy.Body, arg0: sconepy.Vec3) -> sconepy.Vec3
     |  
     |  point_vel(...)
     |      point_vel(self: sconepy.Body, arg0: sconepy.Vec3) -> sconepy.Vec3
     |  
     |  set_ang_vel(...)
     |      set_ang_vel(self: sconepy.Body, arg0: sconepy.Vec3) -> None
     |  
     |  set_external_force(...)
     |      set_external_force(self: sconepy.Body, arg0: sconepy.Vec3) -> None
     |  
     |  set_external_force_at(...)
     |      set_external_force_at(self: sconepy.Body, arg0: sconepy.Vec3, arg1: sconepy.Vec3) -> None
     |  
     |  set_external_moment(...)
     |      set_external_moment(self: sconepy.Body, arg0: sconepy.Vec3) -> None
     |  
     |  set_lin_vel(...)
     |      set_lin_vel(self: sconepy.Body, arg0: sconepy.Vec3) -> None
     |  
     |  set_orientation(...)
     |      set_orientation(self: sconepy.Body, arg0: sconepy.Quat) -> None
     |  
     |  set_pos(...)
     |      set_pos(self: sconepy.Body, arg0: sconepy.Vec3) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Dof(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Dof
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  is_actuated(...)
     |      is_actuated(self: sconepy.Dof) -> bool
     |  
     |  is_rotational(...)
     |      is_rotational(self: sconepy.Dof) -> bool
     |  
     |  name(...)
     |      name(self: sconepy.Dof) -> str
     |  
     |  pos(...)
     |      pos(self: sconepy.Dof) -> float
     |  
     |  rotation_axis(...)
     |      rotation_axis(self: sconepy.Dof) -> sconepy.Vec3
     |  
     |  set_pos(...)
     |      set_pos(self: sconepy.Dof, arg0: float) -> None
     |  
     |  set_vel(...)
     |      set_vel(self: sconepy.Dof, arg0: float) -> None
     |  
     |  vel(...)
     |      vel(self: sconepy.Dof) -> float
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Joint(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Joint
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  add_motor_torque(...)
     |      add_motor_torque(self: sconepy.Joint, arg0: sconepy.Vec3) -> None
     |  
     |  body(...)
     |      body(self: sconepy.Joint) -> sconepy.Body
     |  
     |  has_motor(...)
     |      has_motor(self: sconepy.Joint) -> bool
     |  
     |  limit_power(...)
     |      limit_power(self: sconepy.Joint) -> float
     |  
     |  limit_torque(...)
     |      limit_torque(self: sconepy.Joint) -> sconepy.Vec3
     |  
     |  load(...)
     |      load(self: sconepy.Joint) -> float
     |  
     |  motor_max_torque(...)
     |      motor_max_torque(self: sconepy.Joint) -> float
     |  
     |  name(...)
     |      name(self: sconepy.Joint) -> str
     |  
     |  parent_body(...)
     |      parent_body(self: sconepy.Joint) -> sconepy.Body
     |  
     |  reaction_force(...)
     |      reaction_force(self: sconepy.Joint) -> sconepy.Vec3
     |  
     |  set_motor_damping(...)
     |      set_motor_damping(self: sconepy.Joint, arg0: float) -> None
     |  
     |  set_motor_stiffness(...)
     |      set_motor_stiffness(self: sconepy.Joint, arg0: float) -> None
     |  
     |  set_motor_target_orientation(...)
     |      set_motor_target_orientation(self: sconepy.Joint, arg0: sconepy.Quat) -> None
     |  
     |  set_motor_target_velocity(...)
     |      set_motor_target_velocity(self: sconepy.Joint, arg0: sconepy.Vec3) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Leg(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Leg
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  base_body(...)
     |      base_body(self: sconepy.Leg) -> sconepy.Body
     |  
     |  contact_force(...)
     |      contact_force(self: sconepy.Leg) -> sconepy.Vec3
     |  
     |  contact_load(...)
     |      contact_load(self: sconepy.Leg) -> float
     |  
     |  contact_moment(...)
     |      contact_moment(self: sconepy.Leg) -> sconepy.Vec3
     |  
     |  contact_pos(...)
     |      contact_pos(self: sconepy.Leg) -> sconepy.Vec3
     |  
     |  foot_body(...)
     |      foot_body(self: sconepy.Leg) -> sconepy.Body
     |  
     |  length(...)
     |      length(self: sconepy.Leg) -> float
     |  
     |  name(...)
     |      name(self: sconepy.Leg) -> str
     |  
     |  relative_foot_position(...)
     |      relative_foot_position(self: sconepy.Leg) -> sconepy.Vec3
     |  
     |  upper_body(...)
     |      upper_body(self: sconepy.Leg) -> sconepy.Body
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Measure(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Measure
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  current_result(...)
     |      current_result(self: sconepy.Measure, arg0: scone::Model) -> float
     |  
     |  current_weighted_result(...)
     |      current_weighted_result(self: sconepy.Measure, arg0: scone::Model) -> float
     |  
     |  final_result(...)
     |      final_result(self: sconepy.Measure, arg0: scone::Model) -> float
     |  
     |  final_weighted_result(...)
     |      final_weighted_result(self: sconepy.Measure, arg0: scone::Model) -> float
     |  
     |  name(...)
     |      name(self: sconepy.Measure) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Model(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Model
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  actuator_input_array(...)
     |      actuator_input_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  actuators(...)
     |      actuators(self: sconepy.Model) -> List[sconepy.Actuator]
     |  
     |  adjust_state_for_load(...)
     |      adjust_state_for_load(self: sconepy.Model, arg0: float) -> None
     |  
     |  advance_simulation_to(...)
     |      advance_simulation_to(self: sconepy.Model, arg0: float) -> None
     |  
     |  bodies(...)
     |      bodies(self: sconepy.Model) -> List[sconepy.Body]
     |  
     |  com_pos(...)
     |      com_pos(self: sconepy.Model) -> sconepy.Vec3
     |  
     |  com_vel(...)
     |      com_vel(self: sconepy.Model) -> sconepy.Vec3
     |  
     |  contact_force(...)
     |      contact_force(self: sconepy.Model) -> float
     |  
     |  contact_load(...)
     |      contact_load(self: sconepy.Model) -> float
     |  
     |  contact_power(...)
     |      contact_power(self: sconepy.Model) -> float
     |  
     |  control_step_size(...)
     |      control_step_size(self: sconepy.Model) -> float
     |  
     |  current_measure(...)
     |      current_measure(self: sconepy.Model) -> float
     |  
     |  delayed_dof_position_array(...)
     |      delayed_dof_position_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  delayed_dof_velocity_array(...)
     |      delayed_dof_velocity_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  delayed_muscle_fiber_length_array(...)
     |      delayed_muscle_fiber_length_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  delayed_muscle_fiber_velocity_array(...)
     |      delayed_muscle_fiber_velocity_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  delayed_muscle_force_array(...)
     |      delayed_muscle_force_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  delayed_vestibular_array(...)
     |      delayed_vestibular_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  dof_position_array(...)
     |      dof_position_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  dof_velocity_array(...)
     |      dof_velocity_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  dofs(...)
     |      dofs(self: sconepy.Model) -> List[sconepy.Dof]
     |  
     |  final_measure(...)
     |      final_measure(self: sconepy.Model) -> float
     |  
     |  gravity(...)
     |      gravity(self: sconepy.Model) -> sconepy.Vec3
     |  
     |  has_simulation_ended(...)
     |      has_simulation_ended(self: sconepy.Model) -> bool
     |  
     |  init_muscle_activations(...)
     |      init_muscle_activations(self: sconepy.Model, arg0: numpy.ndarray[numpy.float64]) -> None
     |  
     |  init_state_from_dofs(...)
     |      init_state_from_dofs(self: sconepy.Model) -> None
     |  
     |  integration_step(...)
     |      integration_step(self: sconepy.Model) -> int
     |  
     |  joints(...)
     |      joints(self: sconepy.Model) -> List[sconepy.Joint]
     |  
     |  legs(...)
     |      legs(self: sconepy.Model) -> List[sconepy.Leg]
     |  
     |  log_measure_report(...)
     |      log_measure_report(self: sconepy.Model) -> None
     |  
     |  mass(...)
     |      mass(self: sconepy.Model) -> float
     |  
     |  measure(...)
     |      measure(self: sconepy.Model) -> sconepy.Measure
     |  
     |  muscle_activation_array(...)
     |      muscle_activation_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  muscle_excitation_array(...)
     |      muscle_excitation_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  muscle_fiber_length_array(...)
     |      muscle_fiber_length_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  muscle_fiber_velocity_array(...)
     |      muscle_fiber_velocity_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  muscle_force_array(...)
     |      muscle_force_array(self: sconepy.Model) -> numpy.ndarray
     |  
     |  muscles(...)
     |      muscles(self: sconepy.Model) -> List[sconepy.Muscle]
     |  
     |  name(...)
     |      name(self: sconepy.Model) -> str
     |  
     |  reset(...)
     |      reset(self: sconepy.Model) -> None
     |  
     |  set_actuator_inputs(...)
     |      set_actuator_inputs(self: sconepy.Model, arg0: numpy.ndarray[numpy.float64]) -> None
     |  
     |  set_delayed_actuator_inputs(...)
     |      set_delayed_actuator_inputs(self: sconepy.Model, arg0: numpy.ndarray[numpy.float64]) -> None
     |  
     |  set_dof_positions(...)
     |      set_dof_positions(self: sconepy.Model, arg0: numpy.ndarray[numpy.float64]) -> None
     |  
     |  set_dof_velocities(...)
     |      set_dof_velocities(self: sconepy.Model, arg0: numpy.ndarray[numpy.float64]) -> None
     |  
     |  set_simulation_end_time(...)
     |      set_simulation_end_time(self: sconepy.Model, arg0: float) -> None
     |  
     |  set_state(...)
     |      set_state(self: sconepy.Model, arg0: Dict[str, float]) -> None
     |  
     |  set_store_data(...)
     |      set_store_data(self: sconepy.Model, arg0: bool) -> None
     |  
     |  state(...)
     |      state(self: sconepy.Model) -> Dict[str, float]
     |  
     |  time(...)
     |      time(self: sconepy.Model) -> float
     |  
     |  write_results(...)
     |      write_results(self: sconepy.Model, arg0: str, arg1: str) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Muscle(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Muscle
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  activation(...)
     |      activation(self: sconepy.Muscle) -> float
     |  
     |  excitation(...)
     |      excitation(self: sconepy.Muscle) -> float
     |  
     |  fiber_length(...)
     |      fiber_length(self: sconepy.Muscle) -> float
     |  
     |  fiber_length_norm(...)
     |      fiber_length_norm(self: sconepy.Muscle) -> float
     |  
     |  fiber_velocity(...)
     |      fiber_velocity(self: sconepy.Muscle) -> float
     |  
     |  fiber_velocity_norm(...)
     |      fiber_velocity_norm(self: sconepy.Muscle) -> float
     |  
     |  force(...)
     |      force(self: sconepy.Muscle) -> float
     |  
     |  force_norm(...)
     |      force_norm(self: sconepy.Muscle) -> float
     |  
     |  init_activation(...)
     |      init_activation(self: sconepy.Muscle, arg0: float) -> None
     |  
     |  insertion_body(...)
     |      insertion_body(self: sconepy.Muscle) -> sconepy.Body
     |  
     |  max_isometric_force(...)
     |      max_isometric_force(self: sconepy.Muscle) -> float
     |  
     |  name(...)
     |      name(self: sconepy.Muscle) -> str
     |  
     |  optimal_fiber_length(...)
     |      optimal_fiber_length(self: sconepy.Muscle) -> float
     |  
     |  origin_body(...)
     |      origin_body(self: sconepy.Muscle) -> sconepy.Body
     |  
     |  pennation_angle_at_optimal(...)
     |      pennation_angle_at_optimal(self: sconepy.Muscle) -> float
     |  
     |  tendon_slack_length(...)
     |      tendon_slack_length(self: sconepy.Muscle) -> float
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Optimizer(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Optimizer
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  current_step(...)
     |      current_step(self: sconepy.Optimizer) -> int
     |  
     |  enable_console_output(...)
     |      enable_console_output(self: sconepy.Optimizer) -> None
     |  
     |  finished(...)
     |      finished(self: sconepy.Optimizer) -> bool
     |  
     |  fitness(...)
     |      fitness(self: sconepy.Optimizer) -> float
     |  
     |  output_folder(...)
     |      output_folder(self: sconepy.Optimizer) -> str
     |  
     |  run(...)
     |      run(self: sconepy.Optimizer) -> None
     |  
     |  run_background(...)
     |      run_background(self: sconepy.Optimizer) -> None
     |  
     |  terminate(...)
     |      terminate(self: sconepy.Optimizer) -> None
     |  
     |  wait(...)
     |      wait(self: sconepy.Optimizer, arg0: int) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Quat(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Quat
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: sconepy.Quat) -> None
     |      
     |      2. __init__(self: sconepy.Quat, arg0: float, arg1: float, arg2: float, arg3: float) -> None
     |      
     |      3. __init__(self: sconepy.Quat, arg0: float, arg1: float, arg2: float) -> None
     |  
     |  __mul__(...)
     |      __mul__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __mul__(self: sconepy.Quat, arg0: sconepy.Vec3) -> sconepy.Vec3
     |      
     |      2. __mul__(self: sconepy.Quat, arg0: sconepy.Quat) -> sconepy.Quat
     |  
     |  __neg__(...)
     |      __neg__(self: sconepy.Quat) -> sconepy.Quat
     |  
     |  __repr__(...)
     |      __repr__(self: sconepy.Quat) -> str
     |  
     |  __str__(...)
     |      __str__(self: sconepy.Quat) -> str
     |  
     |  array(...)
     |      array(self: sconepy.Quat) -> numpy.ndarray
     |  
     |  normalize(...)
     |      normalize(self: sconepy.Quat) -> float
     |  
     |  to_euler_xyz(...)
     |      to_euler_xyz(self: sconepy.Quat) -> xo::vec3_<xo::angle_<1,double> >
     |  
     |  to_euler_xzy(...)
     |      to_euler_xzy(self: sconepy.Quat) -> xo::vec3_<xo::angle_<1,double> >
     |  
     |  to_euler_yxz(...)
     |      to_euler_yxz(self: sconepy.Quat) -> xo::vec3_<xo::angle_<1,double> >
     |  
     |  to_euler_yzx(...)
     |      to_euler_yzx(self: sconepy.Quat) -> xo::vec3_<xo::angle_<1,double> >
     |  
     |  to_euler_zxy(...)
     |      to_euler_zxy(self: sconepy.Quat) -> xo::vec3_<xo::angle_<1,double> >
     |  
     |  to_euler_zyx(...)
     |      to_euler_zyx(self: sconepy.Quat) -> xo::vec3_<xo::angle_<1,double> >
     |  
     |  to_rotation_vector(...)
     |      to_rotation_vector(self: sconepy.Quat) -> sconepy.Vec3
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  w
     |  
     |  x
     |  
     |  y
     |  
     |  z
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Scenario(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Scenario
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  create_optimizer(...)
     |      create_optimizer(self: sconepy.Scenario) -> scone::Optimizer
     |  
     |  set(...)
     |      set(self: sconepy.Scenario, arg0: str, arg1: str) -> None
     |  
     |  set_multiple(...)
     |      set_multiple(self: sconepy.Scenario, arg0: Dict[str, str]) -> None
     |  
     |  start_optimization(...)
     |      start_optimization(self: sconepy.Scenario) -> scone::Optimizer
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Vec3(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Vec3
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __add__(...)
     |      __add__(self: sconepy.Vec3, arg0: sconepy.Vec3) -> sconepy.Vec3
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: sconepy.Vec3) -> None
     |      
     |      2. __init__(self: sconepy.Vec3, arg0: float, arg1: float, arg2: float) -> None
     |  
     |  __mul__(...)
     |      __mul__(self: sconepy.Vec3, arg0: float) -> sconepy.Vec3
     |  
     |  __neg__(...)
     |      __neg__(self: sconepy.Vec3) -> sconepy.Vec3
     |  
     |  __repr__(...)
     |      __repr__(self: sconepy.Vec3) -> str
     |  
     |  __rmul__(...)
     |      __rmul__(self: sconepy.Vec3, arg0: float) -> sconepy.Vec3
     |  
     |  __str__(...)
     |      __str__(self: sconepy.Vec3) -> str
     |  
     |  __sub__(...)
     |      __sub__(self: sconepy.Vec3, arg0: sconepy.Vec3) -> sconepy.Vec3
     |  
     |  __truediv__(...)
     |      __truediv__(self: sconepy.Vec3, arg0: float) -> sconepy.Vec3
     |  
     |  array(...)
     |      array(self: sconepy.Vec3) -> numpy.ndarray
     |  
     |  dot(...)
     |      dot(self: sconepy.Vec3, arg0: sconepy.Vec3) -> float
     |  
     |  length(...)
     |      length(self: sconepy.Vec3) -> float
     |  
     |  normalize(...)
     |      normalize(self: sconepy.Vec3) -> float
     |  
     |  normalized(...)
     |      normalized(self: sconepy.Vec3) -> sconepy.Vec3
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  x
     |  
     |  y
     |  
     |  z
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.

FUNCTIONS
    evaluate_par_file(...) method of builtins.PyCapsule instance
        evaluate_par_file(arg0: str) -> None
    
    is_array_dtype_float32(...) method of builtins.PyCapsule instance
        is_array_dtype_float32() -> bool
    
    is_array_dtype_float64(...) method of builtins.PyCapsule instance
        is_array_dtype_float64() -> bool
    
    is_supported(...) method of builtins.PyCapsule instance
        is_supported(arg0: str) -> bool
    
    load_model(...) method of builtins.PyCapsule instance
        load_model(arg0: str) -> scone::Model
    
    load_scenario(...) method of builtins.PyCapsule instance
        load_scenario(arg0: str, arg1: Dict[str, str] = {}) -> scone::sconepy_scenario
    
    replace_string_tags(...) method of builtins.PyCapsule instance
        replace_string_tags(arg0: str) -> str
    
    scone_dir(...) method of builtins.PyCapsule instance
        scone_dir() -> str
    
    scone_results_dir(...) method of builtins.PyCapsule instance
        scone_results_dir() -> str
    
    set_array_dtype_float32(...) method of builtins.PyCapsule instance
        set_array_dtype_float32() -> None
    
    set_array_dtype_float64(...) method of builtins.PyCapsule instance
        set_array_dtype_float64() -> None
    
    set_log_level(...) method of builtins.PyCapsule instance
        set_log_level(arg0: int) -> None
    
    version(...) method of builtins.PyCapsule instance
        version() -> str

VERSION
    0.1.0

FILE
    c:\program files\scone\bin\sconepy.cp39-win_amd64.pyd


